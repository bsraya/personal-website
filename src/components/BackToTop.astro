---
import { BsTriangleFill } from 'solid-icons/bs';
---

<back-to-top>
  <button
    aria-label="Scroll back to top"
    class="back-to-top fixed bottom-5 right-5 z-10 p-2 bg-white border-2 rounded cursor-pointer"
  >
    <BsTriangleFill color="#000000" />
  </button>
</back-to-top>

<style>
  .back-to-top button {
    transition: opacity 0.5s ease-in-out;
  }
</style>

<script>
  class BackToTop extends HTMLElement {
    button: HTMLButtonElement | null = null;
    isVisible: boolean = false; 
    scrollListener: (() => void) | null = null;
    threshold: number = 50;

    connectedCallback() {
      this.button = this.querySelector('button');

      // Initially hide the button
      this.button.style.opacity = '0';
      this.button.style.pointerEvents = 'none'; // Prevent interaction when hidden
      this.isVisible = false;

      // Add click listener to scroll to top
      this.button.addEventListener('click', () => {
        window.scrollTo({ top: 0, behavior: 'smooth' });
      });

      // Define the scroll listener function
      this.scrollListener = () => {
        this.checkScrollPosition();
      };

      // Add scroll listener to window
      window.addEventListener('scroll', this.scrollListener, { passive: true });

      // Check initial scroll position in case the page loads scrolled down
      this.checkScrollPosition();
    }

    disconnectedCallback() {
      if (this.scrollListener) {
        window.removeEventListener('scroll', this.scrollListener);
      }
    }

    checkScrollPosition() {
      if (!this.button) return;

      const shouldBeVisible = window.scrollY > this.threshold;

      if (shouldBeVisible && !this.isVisible) {
        // Show button
        this.button.style.opacity = '1';
        this.button.style.pointerEvents = 'auto';
        this.isVisible = true;
      } else if (!shouldBeVisible && this.isVisible) {
        // Hide button
        this.button.style.opacity = '0';
        this.button.style.pointerEvents = 'none';
        this.isVisible = false;
      }
    }
  }

  customElements.define('back-to-top', BackToTop);
</script>