---
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "../../types/frontmatter.ts";
import { render } from "astro:content";
import { getEntry } from "astro:content";
import { toKebabCase } from "../../utils/string";
import { getSimilarPosts } from "../../utils/content";

import Heading from "../../components/Heading.astro";
import BaseLayout from "../../layouts/BaseLayout.astro";
import SeriesTable from "../../components/SeriesTable.astro";

import Blockquote from "../../components/mdx/Blockquote.astro";
import H1 from "../../components/mdx/H1.astro";
import H2 from "../../components/mdx/H2.astro";
import H3 from "../../components/mdx/H3.astro";
import H4 from "../../components/mdx/H4.astro";
import H5 from "../../components/mdx/H5.astro";
import H6 from "../../components/mdx/H6.astro";
import OrderedList from "../../components/mdx/OrderedList.astro";
import UnorderedList from "../../components/mdx/UnorderedList.astro";
import HorizontalRule from "../../components/mdx/HorizontalRule.astro";
import Table from "../../components/mdx/Table.astro";
import TableRow from "../../components/mdx/TableRow.astro";
import TableHeader from "../../components/mdx/TableHeader.astro";
import TableData from "../../components/mdx/TableData.astro";
import Anchor from "../../components/mdx/Anchor.astro";
import Img from "../../components/mdx/Img.astro";
import Paragraph from "../../components/mdx/Paragraph.astro";


export function getStaticPaths() {
    const allPosts = Object.values(import.meta.glob<MarkdownInstance<Frontmatter>>("../../content/posts/*.mdx", { eager: true }));

    return Array.from(allPosts).map((post) => ({
        params: { slug: post.frontmatter.title.toLowerCase().replace(/ /g, '-') },
    }));
}

const dateObject: object = {
    year: "numeric",
    month: "long",
    day: "numeric"
}

const { slug } = Astro.params;
const post = await getEntry('posts', slug);

if (!post.data.published) {
    return Astro.redirect("/404");
}

const { Content } = await render(post);
---

<BaseLayout>
    <div class="flex gap-2 mb-2 text-slate-700">
        {
            post.data.tag && (
                <a 
                    class="underline cursor-pointer"
                    href={`/tag/${toKebabCase(post.data.tag)}`}
                >{post.data.tag}</a>
            )
        }
        <p>â€¢</p>
        {
            post.data.publishedDate && (
                <div>{new Date(post.data.publishedDate).toLocaleDateString("en-US", dateObject)}</div>
            )
        }
    </div>
    <div class="mb-10">
        <Heading as="h1" weight="bold" class="lg:text-4xl text-3xl">{post.data.title}</Heading>
        <p class="text-slate-600">{post.data.description}</p>
    </div>
    {
        post.data.series && (
            <SeriesTable series={post.data.series} posts={getSimilarPosts(post.data.series)} currentPost={post.data.title} />
        )
    }
    <Content
        class="w-fit" 
        components={{
            h1: H1,
            h2: H2,
            h3: H3,
            h4: H4,
            h5: H5,
            h6: H6,
            ol: OrderedList,
            ul: UnorderedList,
            hr: HorizontalRule,
            a: Anchor,
            table: Table,
            th: TableHeader,
            tr: TableRow,
            td: TableData,
            blockquote: Blockquote,
            img: Img,
            p: Paragraph,
        }}
    />
</BaseLayout>