---
import type { MarkdownInstance } from "astro";
import type { Frontmatter } from "../../types/frontmatter";

import ContentCard from "../../components/ContentCard.astro"
import BaseLayout from "../../layouts/BaseLayout.astro";
import Heading from "../../components/Heading.astro";

import { AiOutlineArrowLeft } from 'solid-icons/ai';

import { toKebabCase, fromKebabCase } from "../../utils/string.ts"
import { getAllPosts, getSortedPosts } from "../../utils/content.ts";

export function getStaticPaths() {
  const tags = new Set<string>();
  const posts = getAllPosts();

  for (const post of posts) {
    if (post.frontmatter.tag) {
      tags.add(toKebabCase(post.frontmatter.tag));
    }
  }

  return Array.from(tags).map((tag) => ({
    params: { tag: tag },
  }));
}

const { tag } = Astro.params;
const allPosts = Object.values(import.meta.glob<MarkdownInstance<Frontmatter>>("../../content/posts/*.mdx", { eager: true }));
const similarPosts = allPosts.filter(post => post.frontmatter.tag && (toKebabCase(post.frontmatter.tag) == tag));
---

<BaseLayout>
  <a href="/posts" class="flex font-semibold hover:underline"><AiOutlineArrowLeft class="my-auto mr-1"/>All posts</a>
  <div class="grid grid-col gap-5">
    { similarPosts.map((post) => <ContentCard frontmatter={post.frontmatter} type="posts" /> ) }
  </div>
</BaseLayout>